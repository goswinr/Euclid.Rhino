<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">	<!-- for UseWindowsForms-->
  <PropertyGroup>
	<OutputType>Library</OutputType>
  <TargetFrameworks>net48;net7.0</TargetFrameworks>

	<LangVersion>preview</LangVersion>
	<SatelliteResourceLanguages>en</SatelliteResourceLanguages> <!--to only have the English resources of Fsharp.Core-->
	<DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference> <!-- so that dependabot does not fail https://github.com/dependabot/dependabot-core/issues/10883#issuecomment-2495962805 -->

	<RootNamespace>Euclid</RootNamespace>
	<AssemblyName>Euclid.Rhino</AssemblyName>
	<AssemblyTitle>Euclid.Rhino</AssemblyTitle>
	<PackageId>Euclid.Rhino</PackageId>
    <Title>Euclid.Rhino</Title>
    <PackageId>Euclid.Rhino</PackageId>

    <!-- <Version>0.0.0</Version>  done by Ionide.KeepAChangelog.Tasks-->

    <Authors>GoswinR</Authors>
    <Copyright>Goswin Rothenthal 2019</Copyright>
    <Description>Utilities to use types from Euclid in Rhino3d</Description>
    <PackageDescription>Utilities to use types from Euclid in Rhino3d</PackageDescription>

	<Product>Rhino Interop for Euclid</Product> <!--visible in explorer-->

	<GenerateDocumentationFile>true</GenerateDocumentationFile>
	<NeutralLanguage>en</NeutralLanguage>
	<Configuration>Release</Configuration>

	<PlatformTarget>x64</PlatformTarget> <!-- x64 is required e.g by Rhino, dont us just 'Platform' tag-->
  </PropertyGroup>

  <PropertyGroup>
	<PackageTags>fsharp;geometry;Rhino3d;RhinoCommon</PackageTags>

    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <!-- <SymbolPackageFormat>snupkg</SymbolPackageFormat>     -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <PackageIcon>logo128.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <DebugType>embedded</DebugType>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <RepositoryUrl>https://github.com/goswinr/Euclid.Rhino</RepositoryUrl>
    <FsDocsLicenseLink>https://github.com/goswinr/Euclid.Rhino/blob/main//LICENSE.md</FsDocsLicenseLink>
    <FsDocsReleaseNotesLink>https://github.com/goswinr/Euclid.Rhino/blob/main/CHANGELOG.md</FsDocsReleaseNotesLink>
    <PackageProjectUrl>https://goswinr.github.io/Euclid.Rhino</PackageProjectUrl>

	<FsDocsFaviconSource>img/favicon.ico</FsDocsFaviconSource>
    <FsDocsWarnOnMissingDocs>true</FsDocsWarnOnMissingDocs>

    <ChangelogFile>./CHANGELOG.md</ChangelogFile>
  </PropertyGroup>


  <ItemGroup>
    <PackageReference Include="FSharp.Core" Version="6.0.7" />  <!-- so that dependabot does not fail, even though it is set to be excluded -->
	  <PackageReference Include="Euclid" Version="0.14.0" />
    <PackageReference Include="RhinoCommon" Version="7.0.20314.3001"  Condition="'$(TargetFramework)' == 'net48'"  PrivateAssets="all" ExcludeAssets="runtime" /> <!--should be the same version as Rhino.Scripting and Rhino.Scripting.Extension -->
    <PackageReference Include="RhinoCommon" Version="8.19.25132.1001" Condition="'$(TargetFramework)' == 'net7.0'" PrivateAssets="all" ExcludeAssets="runtime" /><!--should be the same version as Rhino.Scripting and Rhino.Scripting.Extension -->
    <PackageReference Include="Ionide.KeepAChangelog.Tasks" Version="0.1.8" PrivateAssets="all"  />
  </ItemGroup>

  <ItemGroup>
	<None Include="./README.md" Pack="true" PackagePath="" />
    <None Include="./Docs/img/logo128.png" Pack="true" PackagePath="" />   <!--PackagePath = "" makes the file available to nuget pack tool-->


	<Compile Include="Src/State.fs" />
    <Compile Include="Src/Util.fs" />
    <Compile Include="Src/Rs.fs" />
    <Compile Include="Src/main.fs" />
  </ItemGroup>

  <Target Name="CopyReadmeToDocs" AfterTargets="Build">
    <!-- for fsdocs to build locally -->
    <Copy SourceFiles="./README.md" DestinationFiles="./Docs/index.md" ContinueOnError="false"/>
  </Target>

  <Target Name="WriteChangelogVersion" AfterTargets="AfterBuild"><!-- for version checks in github tag based builds -->
    <WriteLinesToFile File="./bin/ChangelogVersion.txt" Lines="@(CurrentReleaseChangelog)" Overwrite="true" ContinueOnError="false" />
  </Target>

</Project>
